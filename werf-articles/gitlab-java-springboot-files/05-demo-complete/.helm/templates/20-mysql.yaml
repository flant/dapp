{{- if not (eq .Values.global.env "production") }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      service: mysql
  replicas: 1
  serviceName: mysql
  template:
    metadata:
      labels:
        service: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0.16
        args:
        - --default-authentication-plugin=mysql_native_password
        env:
        - name: MYSQL_DATABASE
          value: {{ pluck .Values.global.env .Values.mysql.db | first | default .Values.mysql.db._default }}
        - name: MYSQL_PASSWORD
          value: {{ pluck .Values.global.env .Values.mysql.password | first | default .Values.mysql.password._default }}
        - name: MYSQL_ROOT_PASSWORD
          value: {{ pluck .Values.global.env .Values.mysql.rootpassword | first | default .Values.mysql.rootpassword._default }}
        - name: MYSQL_USER
          value: {{ pluck .Values.global.env .Values.mysql.user | first | default .Values.mysql.user._default }}
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
      volumes:
      - name: data
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    service: mysql
spec:
  ports:
  - name: "3306"
    port: 3306
  selector:
    service: mysql
{{- else }}
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    service: mysql
spec:
  ports:
  - name: "3306"
    port: 3306
  selector:
    service: mysql
---
apiVersion: v1
kind: Endpoints
metadata:
  name: mysql
subsets:
  - addresses:
      - ip: {{ pluck .Values.global.env .Values.mysql.exthost | first | default .Values.mysql.exthost._default }}
    ports:
      - port: {{ pluck .Values.global.env .Values.mysql.extport | first | default .Values.mysql.extport._default }}
{{- end }}
